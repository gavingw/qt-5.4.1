BIN = libsdk.so
include makeconfig
#CONFIG_USE_LOGCAT = true#must set this at Makefile too

LICHEE_TOOL_DIR=../../../../out/sun8iw11p1/linux/common/buildroot/external-toolchain
LICHEE_OUT_HOSTDIR=../../../../out/sun8iw11p1/linux/common/buildroot/host/usr/
PWD=$(shell pwd)
CC            = $(LICHEE_TOOL_DIR)/bin/arm-linux-gnueabi-gcc
CPP           = $(LICHEE_TOOL_DIR)/bin/arm-linux-gnueabi-g++


CEDAR_MACORS = -D_GNU_SOURCE -DOPTION_CC_GNUEABIHF=1 -DOPTION_CC_GNUEABI=2 -DOPTION_CC_UCGNUEABI=3 -DOPTION_CC_LINUX_UCGNUEABI=4 -DOPTION_CC_LINUX_MUSLGNUEABI=5 -DOPTION_CC_LINUX_MUSLGNUEABI64=6 -DOPTION_OS_ANDROID=1 -DOPTION_OS_LINUX=2 -DOPTION_OS_VERSION_ANDROID_4_2=1 -DOPTION_OS_VERSION_ANDROID_4_4=2 -DOPTION_OS_VERSION_ANDROID_5_0=3 -DOPTION_OS_VERSION_ANDROID_6_0=4 -DOPTION_MEMORY_DRIVER_SUNXIMEM=1 -DOPTION_MEMORY_DRIVER_ION=2 -DOPTION_PRODUCT_PAD=1 -DOPTION_PRODUCT_TVBOX=2 -DOPTION_PRODUCT_OTT_CMCC=3 -DOPTION_PRODUCT_IPTV=4 -DOPTION_PRODUCT_DVB=5 -DOPTION_PRODUCT_LOUDSPEAKER=6 -DOPTION_CHIP_R8=1 -DOPTION_CHIP_R16=2 -DOPTION_CHIP_C500=3 -DOPTION_CHIP_R58=4 -DOPTION_CHIP_R18=5 -DOPTION_CHIP_T2=6 -DOPTION_CHIP_T3=7 -DOPTION_DRAM_INTERFACE_DDR1_16BITS=1 -DOPTION_DRAM_INTERFACE_DDR1_32BITS=2 -DOPTION_DRAM_INTERFACE_DDR2_16BITS=3 -DOPTION_DRAM_INTERFACE_DDR2_32BITS=4 -DOPTION_DRAM_INTERFACE_DDR3_16BITS=5 -DOPTION_DRAM_INTERFACE_DDR3_32BITS=6 -DOPTION_DRAM_INTERFACE_DDR3_64BITS=7 -DOPTION_CMCC_NO=0 -DOPTION_CMCC_YES=1 -DOPTION_DTV_NO=0 -DOPTION_DTV_YES=1 -DOPTION_ALI_YUNOS_NO=0 -DOPTION_ALI_YUNOS_YES=1 -DOPTION_IS_CAMERA_DECODER_NO=0 -DOPTION_IS_CAMERA_DECODER_YES=1 -DOPTION_VE_IPC_DISABLE=1 -DOPTION_VE_IPC_ENABLE=2 -DOPTION_NO_DEINTERLACE=0 -DOPTION_HW_DEINTERLACE=1 -DOPTION_SW_DEINTERLACE=2 -DLINUX_VERSION_3_4=1 -DLINUX_VERSION_3_10=2 -DDROP_DELAY_FRAME_NONE=0 -DDROP_DELAY_FRAME_720P=1 -DDROP_DELAY_FRAME_4K=2 -DZEROCOPY_PIXEL_FORMAT_NONE=0 -DZEROCOPY_PIXEL_FORMAT_YUV_MB32_420=1 -DZEROCOPY_PIXEL_FORMAT_YV12=2 -DZEROCOPY_PIXEL_FORMAT_NV21=3 -DGPU_Y16_C16_ALIGN=1 -DGPU_Y32_C16_ALIGN=2 -DGPU_Y16_C8_ALIGN=3 -DZEROCOPY_HAL_PIXEL_FORMAT_AW_YUV_PLANNER420=1 -DZEROCOPY_HAL_PIXEL_FORMAT_AW_YVU_PLANNER420=2 -DDEINTERLACE_FORMAT_MB32_12=1 -DDEINTERLACE_FORMAT_NV=2 -DDEINTERLACE_FORMAT_NV21=3 -DDEINTERLACE_FORMAT_NV12=4 -DOUTPUT_PIXEL_FORMAT_NV21=1 -DOUTPUT_PIXEL_FORMAT_YV12=2 -DOUTPUT_PIXEL_FORMAT_MB32=3 -DGPU_ALIGN_STRIDE_16=1 -DGPU_ALIGN_STRIDE_32=2 -DOPTION_HAVE_ZLIB=1 -DOPTION_NO_ZLIB=2 -DOPTION_HAVE_SSL=1 -DOPTION_NO_SSL=2 -DOPTION_HAVE_LIVE555=1 -DOPTION_NO_LIVE555=2 -DCONFIG_CC=4 -DCONFIG_OS=2 -DCONFIG_CHIP=7 -DCONFIG_ALI_YUNOS=0 -DCONFIG_OS_VERSION=2 -DCONFIG_TARGET_PRODUCT= -DCONFIG_PRODUCT=2 -DCONFIG_HAVE_ZLIB=1 -DCONFIG_HAVE_SSL=1 -DCONFIG_HAVE_LIVE555=2 -DCONFIG_MEMORY_DRIVER=2 -DCONFIG_DRAM_INTERFACE=6 -DCONFIG_VE_IPC=1 -DCONFIG_CMCC=0 -DCONFIG_DTV=0 -DCONFIG_IS_CAMERA_DECODER=0 -DCONFIG_DEINTERLACE=0 -DGPU_TYPE_MALI=1 -DCONFIG_ARM_VERSION= -DENABLE_SUBTITLE_DISPLAY_IN_CEDARX=0 -DDTV=no -DLINUX_VERSION=2 -DUSE_NEW_BDMV_STREAM=0 -DPLAYREADY_DRM_INVOKE=0 -DH265_4K_CHECK_SCALE_DOWN=1 -DNON_H265_4K_NOT_SCALE_DOWN=0 -DSUPPORT_H265=0 -DANTUTU_NOT_SUPPORT=1 -DENABLE_MEDIA_BOOST=1 -DDROP_DELAY_FRAME=2 -DROTATE_PIC_HW=0 -DVE_PHY_OFFSET=0x40000000 -DZEROCOPY_PIXEL_FORMAT=3 -DGPU_Y_C_ALIGN=1 -DSEND_3_BLACK_FRAME_TO_GPU=0 -DZEROCOPY_DYNAMIC_CHECK=1 -DGRALLOC_PRIV=0 -DVIDEO_DIRECT_ACCESS_DE=0 -DKEY_PARAMETER_GET=0 -DDISPLAY_CMD_SETVIDEOSIZE_POSITION=0 -DDEINTERLACE_IOWR=0 -DDEINTERLACE_FORMAT=4 -DNEW_DISPLAY_DOUBLE_STREAM_NEED_NV21=1 -DOUTPUT_PIXEL_FORMAT=1 -DNOT_DROP_FRAME=1 -DSOUND_DEVICE_SET_RAW_FLAG=0 -DNATIVE_WIN_DISPLAY_CMD_GETDISPFPS=0 -DIMG_NV21_4K_ALIGN=0 -DDEINTERLACE_ADDR_64=0 -DCONFIG_LOG_LEVEL=0

CEDAR_MACORS +=  -I./ -I$(PWD)/cedarx/include -I$(PWD)/cedarx/include/libcedarc/include -I$(PWD)/cedarx/include/DEMUX/MUXER/include/include/ \
                  -I$(PWD)/cedarx/include/DEMUX/BASE/include/include -I$(PWD)/cedarx/include/DEMUX/PARSER/include/include/ -I$(PWD)/cedarx/include/DEMUX/STREAM/include/include -I$(PWD)/cedarx/include/PLAYER/include/ \
				  -I$(PWD)/cedarx/include/libcore/muxer/include \
				  -I$(PWD)/cedarx/include/libcore/base/include/ \
				  -I$(PWD)/cedarx/include/libcore/parser/include \
				  -I$(PWD)/cedarx/include/libcore/stream/include \
				  -I$(PWD)/cedarx/include/libcore/playback/include/ \
				  -I$(PWD)/cedarx/include/libcore/common/iniparser \
				  -I$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot/usr/include
				  

#-DSDKLIB_TEST

DEFINES       = -DHAVE_PTHREADS -DSUPPORT_NEW_DRIVER -DHAVE_SYS_UIO_H -DANDROID_SMP=1 -D__ARM_HAVE_DMB -D__ARM_HAVE_LDREX_STREX -D__ARM_HAVE_LDREXD \
				-D__ARM_HAVE_VFP -D__ARM_HAVE_NEON -DHAVE_POSIX_CLOCKS -DWATERMARK_ENABLE -DHAVE_PRCTL -DSUPPORT_NEW_DRIVER -DWATERMARK -DADAS_ENABLE \
				-DCDX_V27 
				
#GPU 导入摄像头纹理显示测试
#DEFINES +=-DDMAFD_TEST



LDFLAGS := -rdynamic -lpthread -fPIC -shared   -L$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot/usr/lib -lasound
TESTLDFLAGS := -rdynamic -L$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot/lib -L$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot/usr/lib -L$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/libc/usr/lib/arm-linux-gnueabi -lpthread  -lasound
MAKE = make
#这里只加入库头文件路径及库路径
#INCS = -I./include -I./include/utils -I../../../..//out/linux/common/buildroot/external-toolchain/arm-linux-gnueabi/include/c++/4.6.3 -I../../../..//out/linux/common/buildroot/external-toolchain/arm-linux-gnueabi/include/c++/4.6.3/arm-linux-gnueabi -I../../../..//out/linux/common/buildroot/external-toolchain/arm-linux-gnueabi/include/c++/4.6.3/backward -I../../../..//out/linux/common/buildroot/external-toolchain/lib/gcc/arm-linux-gnueabi/4.6.3/include -I../../../..//out/linux/common/buildroot/external-toolchain/lib/gcc/arm-linux-gnueabi/4.6.3/include-fixed -I../../../..//out/linux/common/buildroot/external-toolchain/arm-linux-gnueabi/include -I../../../..//out/linux/common/buildroot/host/usr/arm-unknown-linux-gnueabi/sysroot/usr/include/arm-linux-gnueabi -I../../../..//out/linux/common/buildroot/host/usr/arm-unknown-linux-gnueabi/sysroot/usr/include 
LIBS = -L./libs -lsdk_compose  -lsdk_disp  -lsdk_dvr   -lsdk_player  -lsdk_tr  -lmdas -L../../../../tools/pack/chips/sun8iw11p1/hal/gpu/fbdev/lib/ -lGLESv2
#-lfacedetection -lsmileeyeblink -lapperceivepeople
FILDIRS := ./depend% ./obj%
ifneq ($(CONFIG_USE_LOGCAT), true)
FILDIRS += ./liblog% ./logcat%
else
DEFINES += -DUSE_LOGCAT
LOGCAT = logcat
endif
SUBDIRS = $(filter-out $(FILDIRS),$(shell find . -maxdepth 3 -type d))
#生成依赖信息时的搜索目录，比如到下列目录中搜索一个依赖文件(比如.h文件)，例如 -I"./***/" -I"./base/"
DEFINC = -I./include -I./include/disp2 -I./include/utils -I./media -I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/include/c++/4.6.3 -I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/include/c++/4.6.3/arm-linux-gnueabi -I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/include/c++/4.6.3/backward -I$(LICHEE_TOOL_DIR)/lib/gcc/arm-linux-gnueabi/4.6.3/include -I$(LICHEE_TOOL_DIR)/lib/gcc/arm-linux-gnueabi/4.6.3/include-fixed -I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/include -I$(LICHEE_OUT_HOSTDIR)/include/arm-linux-gnueabi -I$(LICHEE_OUT_HOSTDIR)/include -I./camera -I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/libc/usr/include/ \
-I$(LICHEE_TOOL_DIR)/arm-linux-gnueabi/libc/usr/include/arm-linux-gnueabi/ -I./camera/allwinnertech/include -I./camera/allwinnertech/water_mark/ -I./camera/adas/ -I./storage/ -I./sound/  -I./misc/  -I../../../../tools/pack/chips/sun8iw11p1/hal/gpu/fbdev/include -I../../../../out/sun8iw11p1/linux/common/buildroot/host/usr/arm-unknown-linux-gnueabi/sysroot/usr/include/drm/


#给INCS加上依赖搜索路径，分开写可能会产生不一致情况，而且繁琐
INCS += $(DEFINC)
#
#
#maintest.c tree/rbtree.c  多了子目录，那就直接添加 目录/*.c即可   所有的源文件--  .c文件列表
CSRCS =  $(foreach dir,$(SUBDIRS),$(wildcard $(dir)/*.c)) 
CPPSRCS = $(foreach dir,$(SUBDIRS),$(wildcard $(dir)/*.cpp))
 
testPath = $(shell find ./ | grep "testMp4Muxer")
CSRCS := $(filter-out $(testPath), $(CSRCS))   

testPath2 = $(shell find ./ | grep "xplayerdemo")
CSRCS := $(filter-out $(testPath2), $(CSRCS)) 

testPath3 = $(shell find ./ | grep "DebugLevelSetClient")
CSRCS := $(filter-out $(testPath3), $(CSRCS))  

testPath4 = $(shell find ./ | grep "xplayerdemoH264")
CSRCS := $(filter-out $(testPath4), $(CSRCS)) 

#
#
#所有的.o文件列表
#COBJS := $(CSRCS:.c=.o)
#CPPOBJS := $(CPPSRCS:.cpp=.o)
OBJROOTDIR = ./obj/
COBJS = $(subst ./,$(OBJROOTDIR),$(CSRCS:.c=.o))
CPPOBJS = $(subst ./,$(OBJROOTDIR),$(CPPSRCS:.cpp=.o))
OBJDIR = $(subst ./,$(OBJROOTDIR),$(SUBDIRS))
#PWD=.
#
#生成依赖信息 -MM是只生成自己的头文件信息，-M 包含了标准库头文件信息。
#-MT 或 -MQ都可以改变生成的依赖  xxx.o:src/xxx.h 为 src/xxx.o:src/xxx.h 当然。前面的 src/xxx.o需自己指定
#格式为 -MM 输入.c或.cpp  查找依赖路径  -MT或-MQ  生成规则，比如src/xxx.o  -std=c99
SDKDEBUG_FLAGS=-g -O0
#SDKDEBUG_FLAGS= -O2
MAKEDEPEND = $(CC) -MM -MT
CFLAGS= $(SDKDEBUG_FLAGS) -rdynamic -std=c99 -pipe -mfpu=neon -marm -mcpu=cortex-a7 --sysroot=$(PWD)$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot  -Wall -W -D_REENTRANT  -fPIC $(DEFINES) $(INCS)
CPPFLAGS= $(SDKDEBUG_FLAGS) -rdynamic -pipe -marm -mfpu=neon -mcpu=cortex-a7 --sysroot=$(PWD)$(LICHEE_OUT_HOSTDIR)/arm-unknown-linux-gnueabi/sysroot  -Wall -W -D_REENTRANT  -fPIC $(DEFINES) $(INCS)


#针对每个.c文件的.d依赖文件列表
DEFROOTDIR = ./depend/
CDEF = $(subst ./,$(DEFROOTDIR),$(CSRCS:.c=.d))
CPPDEF = $(subst ./,$(DEFROOTDIR),$(CPPSRCS:.cpp=.d))
DEFDIR = $(subst ./,$(DEFROOTDIR),$(SUBDIRS))

all:$(BIN) sdktest DebugLevelSetClient $(LOGCAT) xplayerdemo xplayerdemoH264
#  xplayerdemo muxtest 


$(CDEF) :$(DEFROOTDIR)%.d : %.c
	set -e; rm -f $@; \
	$(MAKEDEPEND) $(<:.c=.o) $< $(DEFINC) $(DEFINES) $(CEDAR_MACORS) > $@.$$$$; \
	sed 's,$(<:.c=.o),obj/$(<:.c=.o) $@ ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$


$(CPPDEF) : $(DEFROOTDIR)%.d : %.cpp
	set -e; rm -f $@; \
	$(MAKEDEPEND) $(<:.cpp=.o) $< $(DEFINC) $(DEFINES) $(CEDAR_MACORS) > $@.$$$$; \
	sed 's,$(<:.cpp=.o),obj/$(<:.cpp=.o) $@ ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$


depend:
	rm $(CDEF)
	rm $(CPPDEF)
	$(MAKE) $(CDEF)
	$(MAKE) $(CPPDEF)


$(COBJS) : $(OBJROOTDIR)%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS) $(DEFINES) $(CEDAR_MACORS)
$(CPPOBJS) : $(OBJROOTDIR)%.o: %.cpp
	$(CPP) -c $< -o $@ $(CPPFLAGS) $(DEFINES) $(CEDAR_MACORS)


# $@--目标文件，$^--所有的依赖文件，$<--第一个依赖文件。每次$< $@ 代表的值就是列表中的
#
$(BIN) : $(COBJS) $(CPPOBJS) 
	$(CPP) -o $(BIN) $(COBJS) $(CPPOBJS) $(LIBS) $(LDFLAGS) $(CEDAR_MACORS)
sdktest:$(BIN)
	$(CPP) -c ./camera/cameratester.cpp -o sdktest.o -g $(CPPFLAGS) $(DEFINES) $(CEDAR_MACORS) $(DEFINC) -DSDKLIB_TEST 
	$(CPP) -o sdktest sdktest.o  -L./cedarx/lib/ -Wl,--no-undefined   -lcdx_playback -lcdx_common -laencoder -lawrecorder -lxplayer   -lcdx_muxer \
             -lcdx_parser -lcdc_vdecoder -lcdx_stream   -lcdc_vencoder -lcdc_ve  -lcdc_sdecoder -lcdc_base -lcdc_memory -ladecoder -laencoder -lxmetadataretriever -lcdx_base -lrt -lpthread -lz -lcrypto -lssl $(LIBS) -L.  -lsdk  $(TESTLDFLAGS) -ltinyalsa  

DebugLevelSetClient:   
	$(CC)  -o debuglevelset  ./camera/DebugLevelSetClient.c
	
muxtest:	
	$(CPP) -c ./cedarx/testMp4Muxer.c -o testMp4Muxer.o -g $(CFLAGS) $(DEFINES)  $(CEDAR_MACORS) $(DEFINC)
	$(CPP) -o muxtest testMp4Muxer.o -L.  -L./cedarx/ -Wl,--no-undefined -lxplayer  -lplayer  -lawrecorder -lvdecoder -lvencoder -ladecoder -laencoder -lsdecoder -lnormal_audio -lpostprocess -lcdx_parser -lcdx_muxer -lcdx_stream -lcdx_base -lVE -lMemAdapter -law_plugin -L./cedarx/external -lxml2 -lz -lcrypto -lssl -lrt -lpthread
xplayerdemo:./cedarx/xplayerdemo.c
	$(CC) -c ./cedarx/xplayerdemo.c -o xplayerdemo.o -g $(CPPFLAGS) $(DEFINES)  $(CEDAR_MACORS) $(DEFINC) -DXPLAYDEMO
	$(CC) -o xplayerdemo xplayerdemo.o  -L./cedarx/lib/ -Wl,--no-undefined   -lcdx_playback -lcdx_common -laencoder -lawrecorder -lxplayer -lcdx_muxer \
             -lcdx_parser -lcdc_vdecoder -lcdx_stream   -lcdc_vencoder -lcdc_ve  -lcdc_sdecoder -lcdc_base -lcdc_memory -ladecoder -laencoder -lxmetadataretriever -lcdx_base -lrt -lpthread -lz -lcrypto -lssl $(LIBS) -L.  -lsdk  $(TESTLDFLAGS) -ltinyalsa  

xplayerdemoH264:./cedarx/xplayerdemoH264.c
	$(CC) -c ./cedarx/xplayerdemoH264.c -o xplayerdemoH264.o -g $(CPPFLAGS) $(DEFINES)  $(CEDAR_MACORS) $(DEFINC) -DXPLAYDEMO
	$(CC) -o xplayerdemoH264 xplayerdemoH264.o  -L./cedarx/lib/ -Wl,--no-undefined   -lcdx_playback -lcdx_common -laencoder -lawrecorder -lxplayer -lcdx_muxer \
             -lcdx_parser -lcdc_vdecoder -lcdx_stream   -lcdc_vencoder -lcdc_ve  -lcdc_sdecoder -lcdc_base -lcdc_memory -ladecoder -laencoder -lxmetadataretriever -lcdx_base -lrt -lpthread -lz -lcrypto -lssl $(LIBS) -L.  -lsdk  $(TESTLDFLAGS) -ltinyalsa  

adbservice:$(BIN)
	$(CPP) -c ./camera/cameratester.cpp -o adbservice.o -g $(CPPFLAGS) $(DEFINES) $(CEDAR_MACORS) $(DEFINC) -DSDKLIB_TEST -DADB_SERVICE
	$(CPP) -o adb-service adbservice.o  -L./cedarx/lib/ -Wl,--no-undefined   -lcdx_playback -lcdx_common -laencoder -lawrecorder -lxplayer   -lcdx_muxer \
             -lcdx_parser -lcdc_vdecoder -lcdx_stream   -lcdc_vencoder -lcdc_ve  -lcdc_sdecoder -lcdc_base -lcdc_memory -ladecoder -laencoder -lxmetadataretriever -lcdx_base -lrt -lpthread -lz -lcrypto -lssl $(LIBS) -L.  -lsdk  $(TESTLDFLAGS) -ltinyalsa  	
	cp adb-service ../../user_rootfs_extra/bin/
	@echo "------------------cp adb done "
logcat:$(BIN)
	$(CPP) -o ./logcat/logcat $(OBJROOTDIR)/logcat/logcat.o $(OBJROOTDIR)/liblog/event_tag_map.o $(OBJROOTDIR)/liblog/fake_log_device.o $(OBJROOTDIR)/liblog/logd_write.o $(OBJROOTDIR)/liblog/logprint.o $(OBJROOTDIR)/liblog/uio.o -lpthread -ldl
	cp ./logcat/logcat ../../user_rootfs_extra/bin/
	@echo "------------------cp logcat done "
#rm $(COBJS)
#	rm $(CPPOBJS)
#	rm $(CDEF)
#	rm $(CPPDEF)
# 链接为最终目标


#引入了.o文件对.c和.h的依赖情况。以后.h被修改也会重新生成，可看看.d文件内容即知道为何
#引入了依赖就相当于引入了一系列的规则，因为依赖内容例如： 目录/xxx.o:目录/xxx.c 目录/xxx.h 也相当于隐含的引入了生成规则
#故上面不能在出现如： $(OBJS) : $(DEF)之类。切记
include $(CDEF)
include $(CPPDEF)
.PHONY:clean cleanall

#清除所有目标文件以及生成的最终目标文件
clean:            
	rm $(BIN) $(COBJS) $(CPPOBJS) sdktest.o sdktest  testMp4Muxer.o muxtest  xplayerdemo xplayerdemo.o
#rm *.d
cleanall:
	@rm -f $(CDEF) $(CPPDEF)
	@rm -f $(BIN) $(COBJS) $(CPPOBJS) sdktest.o sdktest  testMp4Muxer.o muxtest  xplayerdemo xplayerdemo.o
	@rm -rf depend
	@rm -rf obj
